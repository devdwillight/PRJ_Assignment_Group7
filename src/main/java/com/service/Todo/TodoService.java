/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.service.Todo;

import com.dao.Todo.TodoDAO;
import com.model.ToDo;
import java.util.Date;
import java.util.List;

/**
 *
 * @author DELL
 */
public class TodoService implements ITodoService {

    private final TodoDAO todoDAO;

    public TodoService() {
        this.todoDAO = new TodoDAO();
    }

    @Override
    public int countTodo() {
        int count = todoDAO.countTodo();
        System.out.println("[countTodo] ‚úî T·ªïng s·ªë ToDo: " + count);
        return count;
    }

    @Override
    public boolean updateTodo(ToDo todo) {
        System.out.println("[updateTodo] C·∫≠p nh·∫≠t ToDo ID = " + todo.getIdTodo());
        boolean result = todoDAO.updateTodo(todo);
        System.out.println("[updateTodo] " + (result ? "‚úî Th√†nh c√¥ng" : "‚úñ Th·∫•t b·∫°i"));
        return result;
    }

    @Override
    public boolean removeTodo(int id) {
        System.out.println("[removeTodo] Xo√° ToDo ID = " + id);
        boolean result = todoDAO.deleteTodo(id);
        System.out.println("[removeTodo] " + (result ? "‚úî ƒê√£ xo√°" : "‚úñ Kh√¥ng t·ªìn t·∫°i"));
        return result;
    }

    @Override
    public ToDo createTodo(ToDo todo) {
        System.out.println("[createTodo] T·∫°o m·ªõi ToDo: " + todo.getTitle());
        if (todoDAO.insertTodo(todo)) {
            System.out.println("[createTodo] ‚úî ƒê√£ th√™m v·ªõi ID: " + todo.getIdTodo());
            return todo;
        }
        System.out.println("[createTodo] ‚úñ Th√™m th·∫•t b·∫°i");
        return null;
    }

    @Override
    public ToDo getToDoById(int id) {
        System.out.println("[getToDoById] T√¨m ToDo ID = " + id);
        ToDo todo = todoDAO.selectTodoById(id);
        if (todo != null) {
            System.out.println("[getToDoById] ‚úî T√¨m th·∫•y: " + todo.getTitle());
        } else {
            System.out.println("[getToDoById] ‚úñ Kh√¥ng t√¨m th·∫•y");
        }
        return todo;
    }

    @Override
    public List<ToDo> getAllToDo() {
        System.out.println("[getAllToDo] L·∫•y t·∫•t c·∫£ ToDo");
        List<ToDo> list = todoDAO.selectAllTodo();
        System.out.println("[getAllToDo] ‚úî T·ªïng: " + list.size());
        return list;
    }

    @Override
    public List<ToDo> getByDateRange(Date startDate, Date endDate) {
        System.out.println("[getByDateRange] T·ª´ ng√†y " + startDate + " ƒë·∫øn " + endDate);
        List<ToDo> list = todoDAO.selectByDateRange(startDate, endDate);
        System.out.println("[getByDateRange] ‚úî S·ªë ToDo t√¨m th·∫•y: " + list.size());
        return list;
    }

 
    
    public static void main(String[] args) {
        TodoService service = new TodoService();
        List<ToDo> todos = service.getAllToDo();

        System.out.println("üìù Danh s√°ch t·∫•t c·∫£ ToDo:");
        for (ToDo t : todos) {
            System.out.println("-----------------------------");
            System.out.println("ID         : " + t.getIdTodo());
            System.out.println("Ti√™u ƒë·ªÅ    : " + t.getTitle());
            System.out.println("N·ªôi dung   : " + t.getDescription());
            System.out.println("H·∫°n ch√≥t   : " + t.getDueDate());
            System.out.println("Tr·∫°ng th√°i : " + (t.getIsCompleted() ? "ƒê√£ ho√†n th√†nh ‚úÖ" : "Ch∆∞a ho√†n th√†nh ‚ùå"));
        }
        System.out.println("-----------------------------");
        System.out.println("T·ªïng c·ªông: " + todos.size() + " c√¥ng vi·ªác.");
    }

    

}
