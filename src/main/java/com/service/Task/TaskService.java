/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.service.Task;

import com.dao.Task.TaskDAO;
import com.model.Task;
import java.util.List;

/**
 *
 * @author DELL
 */
public class TaskService implements ITaskService {

    private final TaskDAO taskDAO;

    public TaskService() {
        this.taskDAO = new TaskDAO();
    }

    @Override
    public int countTask() {
        int count = taskDAO.countTask();
        System.out.println("[countTask] T·ªïng s·ªë c√¥ng vi·ªác: " + count);
        return count;
    }

    @Override
    public boolean updateTask(Task task) {
        System.out.println("[updateTask] C·∫≠p nh·∫≠t task ID = " + task.getIdTask());
        boolean success = taskDAO.updateTask(task);
        System.out.println("[updateTask] " + (success ? "‚úî Th√†nh c√¥ng" : "‚úñ Th·∫•t b·∫°i"));
        return success;
    }

    @Override
    public boolean removeTask(int id) {
        System.out.println("[removeTask] Xo√° task ID = " + id);
        boolean success = taskDAO.deleteTask(id);
        System.out.println("[removeTask] " + (success ? "‚úî ƒê√£ xo√°" : "‚úñ Kh√¥ng t√¨m th·∫•y"));
        return success;
    }

    @Override
    public Task createTask(Task task) {
        System.out.println("[createTask] T·∫°o m·ªõi c√¥ng vi·ªác: " + task.getName());
        if (taskDAO.insertTask(task)) {
            System.out.println("[createTask] ‚úî ƒê√£ t·∫°o task v·ªõi ID = " + task.getIdTask());
            return task;
        } else {
            System.out.println("[createTask] ‚úñ Kh√¥ng th·ªÉ t·∫°o task");
            return null;
        }
    }

    @Override
    public Task getTaskById(int id) {
        System.out.println("[getTaskById] L·∫•y task theo ID = " + id);
        Task task = taskDAO.selectTaskById(id);
        if (task != null) {
            System.out.println("[getTaskById] ‚úî T√¨m th·∫•y task: " + task.getName());
        } else {
            System.out.println("[getTaskById] ‚úñ Kh√¥ng t√¨m th·∫•y task");
        }
        return task;
    }

    @Override
    public List<Task> getAllTasks() {
        System.out.println("[getAllTasks] L·∫•y to√†n b·ªô danh s√°ch task");
        List<Task> list = taskDAO.selectAllTasks();
        System.out.println("[getAllTasks] ‚úî T·ªïng s·ªë: " + list.size() + " task");
        return list;
    }

    @Override
    public List<Task> getAllTasksByUserId(int id) {
        System.out.println("[getAllTasksByUserId] L·∫•y to√†n b·ªô danh s√°ch task");
        List<Task> list = taskDAO.selectAllByUserId(id);
        System.out.println("[getAllTasksByUserId] ‚úî T·ªïng s·ªë: " + list.size() + " task");
        return list;
    }

    // üß™ Test nhanh
    public static void main(String[] args) {
        TaskService service = new TaskService();
        List<Task> tasks = service.getAllTasksByUserId(1);

        System.out.println("üìã Danh s√°ch c√°c task:");
        for (Task t : tasks) {
            System.out.println("ID: " + t.getIdTask() + ", Ti√™u ƒë·ªÅ: " + t.getName() + ", Th·ªùi gian t·∫°o " + t.getCreatedAt());
        }

        System.out.println("T·ªïng s·ªë task: " + service.countTask());
    }

}
